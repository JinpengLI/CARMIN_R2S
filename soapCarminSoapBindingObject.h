/* soapCarminSoapBindingObject.h
   Generated by gSOAP 2.7.17 from api.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapCarminSoapBindingObject_H
#define soapCarminSoapBindingObject_H
#include "soapH.h"

/******************************************************************************\
 *                                                                            *
 * Service Object                                                             *
 *                                                                            *
\******************************************************************************/

class CarminSoapBindingService : public soap
{    public:
	CarminSoapBindingService()
	{ static const struct Namespace namespaces[] =
{
	{"SOAP-ENV", "http://schemas.xmlsoap.org/soap/envelope/", "http://www.w3.org/*/soap-envelope", NULL},
	{"SOAP-ENC", "http://schemas.xmlsoap.org/soap/encoding/", "http://www.w3.org/*/soap-encoding", NULL},
	{"xsi", "http://www.w3.org/2001/XMLSchema-instance", "http://www.w3.org/*/XMLSchema-instance", NULL},
	{"xsd", "http://www.w3.org/2001/XMLSchema", "http://www.w3.org/*/XMLSchema", NULL},
	{"api", "http://france-life-imaging.fr/api", NULL, NULL},
	{NULL, NULL, NULL, NULL}
};

	this->namespaces = namespaces; };
	virtual ~CarminSoapBindingService() { };
	/// Bind service to port (returns master socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET bind(const char *host, int port, int backlog) { return soap_bind(this, host, port, backlog); };
	/// Accept next request (returns socket or SOAP_INVALID_SOCKET)
	virtual	SOAP_SOCKET accept() { return soap_accept(this); };
	/// Serve this request (returns error code or SOAP_OK)
	virtual	int serve() { return soap_serve(this); };
};

/******************************************************************************\
 *                                                                            *
 * Service Operations (you should define these globally)                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 __api__authenticateSession(struct soap*, api__authenticateSession *api__authenticateSession_, api__authenticateSessionResponse *api__authenticateSessionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__deleteExecution(struct soap*, api__deleteExecution *api__deleteExecution_, api__deleteExecutionResponse *api__deleteExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getPipeline(struct soap*, api__getPipeline *api__getPipeline_, api__getPipelineResponse *api__getPipelineResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__authenticateHTTP(struct soap*, api__authenticateHTTP *api__authenticateHTTP_, api__authenticateHTTPResponse *api__authenticateHTTPResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__logout(struct soap*, api__logout *api__logout_, api__logoutResponse *api__logoutResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__updateExecution(struct soap*, api__updateExecution *api__updateExecution_, api__updateExecutionResponse *api__updateExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getGlobalProperties(struct soap*, api__getGlobalProperties *api__getGlobalProperties_, api__getGlobalPropertiesResponse *api__getGlobalPropertiesResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__initExecution(struct soap*, api__initExecution *api__initExecution_, api__initExecutionResponse *api__initExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getStdOut(struct soap*, api__getStdOut *api__getStdOut_, api__getStdOutResponse *api__getStdOutResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getStdErr(struct soap*, api__getStdErr *api__getStdErr_, api__getStdErrResponse *api__getStdErrResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getExecutionResults(struct soap*, api__getExecutionResults *api__getExecutionResults_, api__getExecutionResultsResponse *api__getExecutionResultsResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__killExecution(struct soap*, api__killExecution *api__killExecution_, api__killExecutionResponse *api__killExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__getExecution(struct soap*, api__getExecution *api__getExecution_, api__getExecutionResponse *api__getExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__playExecution(struct soap*, api__playExecution *api__playExecution_, api__playExecutionResponse *api__playExecutionResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__listPipelines(struct soap*, api__listPipelines *api__listPipelines_, api__listPipelinesResponse *api__listPipelinesResponse_);

SOAP_FMAC5 int SOAP_FMAC6 __api__listExecutions(struct soap*, api__listExecutions *api__listExecutions_, api__listExecutionsResponse *api__listExecutionsResponse_);

#endif
