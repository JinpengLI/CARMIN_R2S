/* soapClient.cpp
   Generated by gSOAP 2.7.17 from api.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.17 2016-01-13 17:01:41 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__authenticateSession(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__authenticateSession *ns1__authenticateSession_, ns1__authenticateSessionResponse *ns1__authenticateSessionResponse_)
{	struct __ns1__authenticateSession soap_tmp___ns1__authenticateSession;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__authenticateSession.ns1__authenticateSession_ = ns1__authenticateSession_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateSession(soap, &soap_tmp___ns1__authenticateSession);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateSession(soap, &soap_tmp___ns1__authenticateSession, "-ns1:authenticateSession", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateSession(soap, &soap_tmp___ns1__authenticateSession, "-ns1:authenticateSession", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__authenticateSessionResponse_)
		return soap_closesock(soap);
	ns1__authenticateSessionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateSessionResponse_->soap_get(soap, "ns1:authenticateSessionResponse", "ns1:authenticateSessionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__deleteExecution *ns1__deleteExecution_, ns1__deleteExecutionResponse *ns1__deleteExecutionResponse_)
{	struct __ns1__deleteExecution soap_tmp___ns1__deleteExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteExecution.ns1__deleteExecution_ = ns1__deleteExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteExecution(soap, &soap_tmp___ns1__deleteExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteExecution(soap, &soap_tmp___ns1__deleteExecution, "-ns1:deleteExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteExecution(soap, &soap_tmp___ns1__deleteExecution, "-ns1:deleteExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__deleteExecutionResponse_)
		return soap_closesock(soap);
	ns1__deleteExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__deleteExecutionResponse_->soap_get(soap, "ns1:deleteExecutionResponse", "ns1:deleteExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPipeline(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getPipeline *ns1__getPipeline_, ns1__getPipelineResponse *ns1__getPipelineResponse_)
{	struct __ns1__getPipeline soap_tmp___ns1__getPipeline;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPipeline.ns1__getPipeline_ = ns1__getPipeline_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPipeline(soap, &soap_tmp___ns1__getPipeline);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPipeline(soap, &soap_tmp___ns1__getPipeline, "-ns1:getPipeline", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPipeline(soap, &soap_tmp___ns1__getPipeline, "-ns1:getPipeline", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getPipelineResponse_)
		return soap_closesock(soap);
	ns1__getPipelineResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getPipelineResponse_->soap_get(soap, "ns1:getPipelineResponse", "ns1:getPipelineResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__authenticateHTTP(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__authenticateHTTP *ns1__authenticateHTTP_, ns1__authenticateHTTPResponse *ns1__authenticateHTTPResponse_)
{	struct __ns1__authenticateHTTP soap_tmp___ns1__authenticateHTTP;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__authenticateHTTP.ns1__authenticateHTTP_ = ns1__authenticateHTTP_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__authenticateHTTP(soap, &soap_tmp___ns1__authenticateHTTP);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authenticateHTTP(soap, &soap_tmp___ns1__authenticateHTTP, "-ns1:authenticateHTTP", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authenticateHTTP(soap, &soap_tmp___ns1__authenticateHTTP, "-ns1:authenticateHTTP", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__authenticateHTTPResponse_)
		return soap_closesock(soap);
	ns1__authenticateHTTPResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__authenticateHTTPResponse_->soap_get(soap, "ns1:authenticateHTTPResponse", "ns1:authenticateHTTPResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__logout(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__logout *ns1__logout_, ns1__logoutResponse *ns1__logoutResponse_)
{	struct __ns1__logout soap_tmp___ns1__logout;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__logout.ns1__logout_ = ns1__logout_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__logout(soap, &soap_tmp___ns1__logout);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__logout(soap, &soap_tmp___ns1__logout, "-ns1:logout", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__logout(soap, &soap_tmp___ns1__logout, "-ns1:logout", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__logoutResponse_)
		return soap_closesock(soap);
	ns1__logoutResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__logoutResponse_->soap_get(soap, "ns1:logoutResponse", "ns1:logoutResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updateExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__updateExecution *ns1__updateExecution_, ns1__updateExecutionResponse *ns1__updateExecutionResponse_)
{	struct __ns1__updateExecution soap_tmp___ns1__updateExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__updateExecution.ns1__updateExecution_ = ns1__updateExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__updateExecution(soap, &soap_tmp___ns1__updateExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateExecution(soap, &soap_tmp___ns1__updateExecution, "-ns1:updateExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateExecution(soap, &soap_tmp___ns1__updateExecution, "-ns1:updateExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__updateExecutionResponse_)
		return soap_closesock(soap);
	ns1__updateExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__updateExecutionResponse_->soap_get(soap, "ns1:updateExecutionResponse", "ns1:updateExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getGlobalProperties(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getGlobalProperties *ns1__getGlobalProperties_, ns1__getGlobalPropertiesResponse *ns1__getGlobalPropertiesResponse_)
{	struct __ns1__getGlobalProperties soap_tmp___ns1__getGlobalProperties;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getGlobalProperties.ns1__getGlobalProperties_ = ns1__getGlobalProperties_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getGlobalProperties(soap, &soap_tmp___ns1__getGlobalProperties);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getGlobalProperties(soap, &soap_tmp___ns1__getGlobalProperties, "-ns1:getGlobalProperties", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getGlobalProperties(soap, &soap_tmp___ns1__getGlobalProperties, "-ns1:getGlobalProperties", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getGlobalPropertiesResponse_)
		return soap_closesock(soap);
	ns1__getGlobalPropertiesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getGlobalPropertiesResponse_->soap_get(soap, "ns1:getGlobalPropertiesResponse", "ns1:getGlobalPropertiesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__initExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__initExecution *ns1__initExecution_, ns1__initExecutionResponse *ns1__initExecutionResponse_)
{	struct __ns1__initExecution soap_tmp___ns1__initExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__initExecution.ns1__initExecution_ = ns1__initExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__initExecution(soap, &soap_tmp___ns1__initExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__initExecution(soap, &soap_tmp___ns1__initExecution, "-ns1:initExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__initExecution(soap, &soap_tmp___ns1__initExecution, "-ns1:initExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__initExecutionResponse_)
		return soap_closesock(soap);
	ns1__initExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__initExecutionResponse_->soap_get(soap, "ns1:initExecutionResponse", "ns1:initExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getStdOut(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getStdOut *ns1__getStdOut_, ns1__getStdOutResponse *ns1__getStdOutResponse_)
{	struct __ns1__getStdOut soap_tmp___ns1__getStdOut;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getStdOut.ns1__getStdOut_ = ns1__getStdOut_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getStdOut(soap, &soap_tmp___ns1__getStdOut);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getStdOut(soap, &soap_tmp___ns1__getStdOut, "-ns1:getStdOut", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getStdOut(soap, &soap_tmp___ns1__getStdOut, "-ns1:getStdOut", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getStdOutResponse_)
		return soap_closesock(soap);
	ns1__getStdOutResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getStdOutResponse_->soap_get(soap, "ns1:getStdOutResponse", "ns1:getStdOutResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getStdErr(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getStdErr *ns1__getStdErr_, ns1__getStdErrResponse *ns1__getStdErrResponse_)
{	struct __ns1__getStdErr soap_tmp___ns1__getStdErr;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getStdErr.ns1__getStdErr_ = ns1__getStdErr_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getStdErr(soap, &soap_tmp___ns1__getStdErr);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getStdErr(soap, &soap_tmp___ns1__getStdErr, "-ns1:getStdErr", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getStdErr(soap, &soap_tmp___ns1__getStdErr, "-ns1:getStdErr", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getStdErrResponse_)
		return soap_closesock(soap);
	ns1__getStdErrResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getStdErrResponse_->soap_get(soap, "ns1:getStdErrResponse", "ns1:getStdErrResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getExecutionResults(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getExecutionResults *ns1__getExecutionResults_, ns1__getExecutionResultsResponse *ns1__getExecutionResultsResponse_)
{	struct __ns1__getExecutionResults soap_tmp___ns1__getExecutionResults;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getExecutionResults.ns1__getExecutionResults_ = ns1__getExecutionResults_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getExecutionResults(soap, &soap_tmp___ns1__getExecutionResults);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getExecutionResults(soap, &soap_tmp___ns1__getExecutionResults, "-ns1:getExecutionResults", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getExecutionResults(soap, &soap_tmp___ns1__getExecutionResults, "-ns1:getExecutionResults", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getExecutionResultsResponse_)
		return soap_closesock(soap);
	ns1__getExecutionResultsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getExecutionResultsResponse_->soap_get(soap, "ns1:getExecutionResultsResponse", "ns1:getExecutionResultsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__killExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__killExecution *ns1__killExecution_, ns1__killExecutionResponse *ns1__killExecutionResponse_)
{	struct __ns1__killExecution soap_tmp___ns1__killExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__killExecution.ns1__killExecution_ = ns1__killExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__killExecution(soap, &soap_tmp___ns1__killExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__killExecution(soap, &soap_tmp___ns1__killExecution, "-ns1:killExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__killExecution(soap, &soap_tmp___ns1__killExecution, "-ns1:killExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__killExecutionResponse_)
		return soap_closesock(soap);
	ns1__killExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__killExecutionResponse_->soap_get(soap, "ns1:killExecutionResponse", "ns1:killExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__getExecution *ns1__getExecution_, ns1__getExecutionResponse *ns1__getExecutionResponse_)
{	struct __ns1__getExecution soap_tmp___ns1__getExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getExecution.ns1__getExecution_ = ns1__getExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getExecution(soap, &soap_tmp___ns1__getExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getExecution(soap, &soap_tmp___ns1__getExecution, "-ns1:getExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getExecution(soap, &soap_tmp___ns1__getExecution, "-ns1:getExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__getExecutionResponse_)
		return soap_closesock(soap);
	ns1__getExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__getExecutionResponse_->soap_get(soap, "ns1:getExecutionResponse", "ns1:getExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__playExecution(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__playExecution *ns1__playExecution_, ns1__playExecutionResponse *ns1__playExecutionResponse_)
{	struct __ns1__playExecution soap_tmp___ns1__playExecution;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__playExecution.ns1__playExecution_ = ns1__playExecution_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__playExecution(soap, &soap_tmp___ns1__playExecution);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__playExecution(soap, &soap_tmp___ns1__playExecution, "-ns1:playExecution", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__playExecution(soap, &soap_tmp___ns1__playExecution, "-ns1:playExecution", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__playExecutionResponse_)
		return soap_closesock(soap);
	ns1__playExecutionResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__playExecutionResponse_->soap_get(soap, "ns1:playExecutionResponse", "ns1:playExecutionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__listPipelines(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__listPipelines *ns1__listPipelines_, ns1__listPipelinesResponse *ns1__listPipelinesResponse_)
{	struct __ns1__listPipelines soap_tmp___ns1__listPipelines;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__listPipelines.ns1__listPipelines_ = ns1__listPipelines_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__listPipelines(soap, &soap_tmp___ns1__listPipelines);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__listPipelines(soap, &soap_tmp___ns1__listPipelines, "-ns1:listPipelines", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__listPipelines(soap, &soap_tmp___ns1__listPipelines, "-ns1:listPipelines", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__listPipelinesResponse_)
		return soap_closesock(soap);
	ns1__listPipelinesResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__listPipelinesResponse_->soap_get(soap, "ns1:listPipelinesResponse", "ns1:listPipelinesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__listExecutions(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns1__listExecutions *ns1__listExecutions_, ns1__listExecutionsResponse *ns1__listExecutionsResponse_)
{	struct __ns1__listExecutions soap_tmp___ns1__listExecutions;
	if (!soap_endpoint)
		soap_endpoint = "http://localhost/api";
	if (!soap_action)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__listExecutions.ns1__listExecutions_ = ns1__listExecutions_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__listExecutions(soap, &soap_tmp___ns1__listExecutions);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__listExecutions(soap, &soap_tmp___ns1__listExecutions, "-ns1:listExecutions", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__listExecutions(soap, &soap_tmp___ns1__listExecutions, "-ns1:listExecutions", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns1__listExecutionsResponse_)
		return soap_closesock(soap);
	ns1__listExecutionsResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns1__listExecutionsResponse_->soap_get(soap, "ns1:listExecutionsResponse", "ns1:listExecutionsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
