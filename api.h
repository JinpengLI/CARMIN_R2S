// Reminder: Modify typemap.dat to customize the header file generated by wsdl2h
/* api.h
   Generated by wsdl2h 1.2.17 from api.wsdl and typemap.dat
   2016-03-11 10:04:19 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on api.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://france-life-imaging.fr/api                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

api = "http://france-life-imaging.fr/api"

*/

#define SOAP_NAMESPACE_OF_api	"http://france-life-imaging.fr/api"
//gsoap api   schema namespace:	http://france-life-imaging.fr/api
//gsoap api   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/



//  Forward declaration of class api__authenticateSession.
class api__authenticateSession;

//  Forward declaration of class api__authenticateSessionResponse.
class api__authenticateSessionResponse;

//  Forward declaration of class api__Response.
class api__Response;

//  Forward declaration of class api__Pipeline.
class api__Pipeline;

//  Forward declaration of class api__Object.
class api__Object;

//  Forward declaration of class api__ArrayOfStrings.
class api__ArrayOfStrings;

//  Forward declaration of class api__ArrayOfPipelines.
class api__ArrayOfPipelines;

//  Forward declaration of class api__ArrayOfExecutions.
class api__ArrayOfExecutions;

//  Forward declaration of class api__PipelineParameter.
class api__PipelineParameter;

//  Forward declaration of class api__ParameterTypedValue.
class api__ParameterTypedValue;

//  Forward declaration of class api__IntKeyStringValuePair.
class api__IntKeyStringValuePair;

//  Forward declaration of class api__Execution.
class api__Execution;

//  Forward declaration of class api__StringKeyParameterValuePair.
class api__StringKeyParameterValuePair;

//  Forward declaration of class api__GlobalProperties.
class api__GlobalProperties;

//  Forward declaration of class api__PipelineKeyBooleanValuePair.
class api__PipelineKeyBooleanValuePair;

//  Forward declaration of class api__deleteExecution.
class api__deleteExecution;

//  Forward declaration of class api__deleteExecutionResponse.
class api__deleteExecutionResponse;

//  Forward declaration of class api__getPipeline.
class api__getPipeline;

//  Forward declaration of class api__getPipelineResponse.
class api__getPipelineResponse;

//  Forward declaration of class api__authenticateHTTP.
class api__authenticateHTTP;

//  Forward declaration of class api__authenticateHTTPResponse.
class api__authenticateHTTPResponse;

//  Forward declaration of class api__logout.
class api__logout;

//  Forward declaration of class api__logoutResponse.
class api__logoutResponse;

//  Forward declaration of class api__updateExecution.
class api__updateExecution;

//  Forward declaration of class api__StringKeyValuePair.
class api__StringKeyValuePair;

//  Forward declaration of class api__updateExecutionResponse.
class api__updateExecutionResponse;

//  Forward declaration of class api__getGlobalProperties.
class api__getGlobalProperties;

//  Forward declaration of class api__getGlobalPropertiesResponse.
class api__getGlobalPropertiesResponse;

//  Forward declaration of class api__initExecution.
class api__initExecution;

//  Forward declaration of class api__initExecutionResponse.
class api__initExecutionResponse;

//  Forward declaration of class api__getExecutionResults.
class api__getExecutionResults;

//  Forward declaration of class api__getExecutionResultsResponse.
class api__getExecutionResultsResponse;

//  Forward declaration of class api__killExecution.
class api__killExecution;

//  Forward declaration of class api__getStdOut.
class api__getStdOut;

//  Forward declaration of class api__getStdOutResponse.
class api__getStdOutResponse;

//  Forward declaration of class api__getStdErr.
class api__getStdErr;

//  Forward declaration of class api__getStdErrResponse.
class api__getStdErrResponse;

//  Forward declaration of class api__killExecutionResponse.
class api__killExecutionResponse;

//  Forward declaration of class api__getExecution.
class api__getExecution;

//  Forward declaration of class api__getExecutionResponse.
class api__getExecutionResponse;

//  Forward declaration of class api__playExecution.
class api__playExecution;

//  Forward declaration of class api__playExecutionResponse.
class api__playExecutionResponse;

//  Forward declaration of class api__listPipelines.
class api__listPipelines;

//  Forward declaration of class api__listPipelinesResponse.
class api__listPipelinesResponse;

//  Forward declaration of class api__listExecutions.
class api__listExecutions;

//  Forward declaration of class api__listExecutionsResponse.
class api__listExecutionsResponse;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://france-life-imaging.fr/api                                        *
 *                                                                            *
\******************************************************************************/


/// "http://france-life-imaging.fr/api":ParameterType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'api__ParameterType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum api__ParameterType
{
	api__ParameterType__File,	///< xs:string value="File"
	api__ParameterType__String,	///< xs:string value="String"
	api__ParameterType__Boolean,	///< xs:string value="Boolean"
	api__ParameterType__Int64,	///< xs:string value="Int64"
	api__ParameterType__Double,	///< xs:string value="Double"
	api__ParameterType__List,	///< xs:string value="List"
};

/// "http://france-life-imaging.fr/api":ExecutionStatus is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'api__ExecutionStatus' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum api__ExecutionStatus
{
	api__ExecutionStatus__Initializing,	///< xs:string value="Initializing"
	api__ExecutionStatus__Ready,	///< xs:string value="Ready"
	api__ExecutionStatus__Running,	///< xs:string value="Running"
	api__ExecutionStatus__Finished,	///< xs:string value="Finished"
	api__ExecutionStatus__InitializationFailed,	///< xs:string value="InitializationFailed"
	api__ExecutionStatus__ExecutionFailed,	///< xs:string value="ExecutionFailed"
	api__ExecutionStatus__Unknown,	///< xs:string value="Unknown"
	api__ExecutionStatus__Killed,	///< xs:string value="Killed"
};

/// "http://france-life-imaging.fr/api":Module is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'api__Module' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum api__Module
{
	api__Module__Processing,	///< xs:string value="Processing"
	api__Module__Data,	///< xs:string value="Data"
	api__Module__Management,	///< xs:string value="Management"
	api__Module__Commercial,	///< xs:string value="Commercial"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://france-life-imaging.fr/api                                        *
 *                                                                            *
\******************************************************************************/


/// "http://france-life-imaging.fr/api":authenticateSession is a complexType.
class api__authenticateSession
{ public:
/// Element userName of type xs:string.
    std::string                          userName                       1;	///< Required element.
/// Element password of type xs:string.
    std::string                          password                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":authenticateSessionResponse is a complexType.
class api__authenticateSessionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":Response is a complexType.
class api__Response
{ public:
/// Element statusCode of type xs:int.
    int                                  statusCode                     1;	///< Required element.
/// Element errorMessage of type xs:string.
    std::string*                         errorMessage                   0;	///< Optional element.
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_Response              ;	///< Union _api__union_Response selector: set to SOAP_UNION__api__union_Response_<fieldname>
    union _api__union_Response
    {
/// Vector of api__Pipeline* with length 0..unbounded
    std::vector<api__Pipeline*        > *returnedValuePipeline          0;
/// Element returnedValueExecution of type "http://france-life-imaging.fr/api":Execution.
    api__Execution*                      returnedValueExecution         0;	///< Optional element.
/// Element returnedValueGlobalProp of type "http://france-life-imaging.fr/api":GlobalProperties.
    api__GlobalProperties*               returnedValueGlobalProp        0;	///< Optional element.
/// Vector of std::string with length 0..unbounded
    std::vector<std::string           > *returnedValueStr               0;
/// Vector of api__ArrayOfStrings* with length 0..unbounded
    std::vector<api__ArrayOfStrings*  > *returnedValueListStrings       0;
/// Vector of api__ArrayOfExecutions* with length 0..unbounded
    std::vector<api__ArrayOfExecutions*> *returnedValueListExecutions    0;
/// Vector of api__ArrayOfPipelines* with length 0..unbounded
    std::vector<api__ArrayOfPipelines*> *returnedValueListPipelines     0;
/// Element returnedValueStatus of type "http://france-life-imaging.fr/api":ExecutionStatus.
    enum api__ExecutionStatus*           returnedValueStatus            0;	///< Optional element.
/// Vector of api__PipelineKeyBooleanValuePair* with length 0..unbounded
    std::vector<api__PipelineKeyBooleanValuePair*> *returnedValuePairKey           0;
    }                                    union_Response                ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":Object is a complexType.
class api__Object
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":ArrayOfStrings is a complexType.
class api__ArrayOfStrings
{ public:
/// Vector of std::string with length 0..unbounded
    std::vector<std::string            > item                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":ArrayOfPipelines is a complexType.
class api__ArrayOfPipelines
{ public:
/// Vector of api__Pipeline* with length 0..unbounded
    std::vector<api__Pipeline*         > item                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":ArrayOfExecutions is a complexType.
class api__ArrayOfExecutions
{ public:
/// Vector of api__Execution* with length 0..unbounded
    std::vector<api__Execution*        > item                           0;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":PipelineParameter is a complexType.
class api__PipelineParameter
{ public:
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element type of type "http://france-life-imaging.fr/api":ParameterType.
    enum api__ParameterType              type                           1;	///< Required element.
/// Element isOptional of type xs:boolean.
    bool                                 isOptional                     1;	///< Required element.
/// Element isReturnedValue of type xs:boolean.
    bool                                 isReturnedValue                1;	///< Required element.
/// Element defaultValue of type "http://france-life-imaging.fr/api":ParameterTypedValue.
    api__ParameterTypedValue*            defaultValue                   0;	///< Optional element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":ParameterTypedValue is a complexType.
class api__ParameterTypedValue
{ public:
/// Element type of type "http://france-life-imaging.fr/api":ParameterType.
    enum api__ParameterType              type                           1;	///< Required element.
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_ParameterTypedValue   ;	///< Union _api__union_ParameterTypedValue selector: set to SOAP_UNION__api__union_ParameterTypedValue_<fieldname>
    union _api__union_ParameterTypedValue
    {
/// Element valueStr of type xs:string.
    std::string*                         valueStr                       1;	///< Required element.
/// Element valueBool of type xs:boolean.
    bool                                 valueBool                      1;	///< Required element.
/// Element valueInt of type xs:int.
    int                                  valueInt                       1;	///< Required element.
/// Element valueDouble of type xs:double.
    double                               valueDouble                    1;	///< Required element.
    }                                    union_ParameterTypedValue     ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":IntKeyStringValuePair is a complexType.
class api__IntKeyStringValuePair
{ public:
/// Element name of type xs:int.
    int                                  name                           1;	///< Required element.
/// Element value of type xs:string.
    std::string                          value                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":StringKeyParameterValuePair is a complexType.
class api__StringKeyParameterValuePair
{ public:
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element value of type "http://france-life-imaging.fr/api":ParameterTypedValue.
    api__ParameterTypedValue*            value                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":PipelineKeyBooleanValuePair is a complexType.
class api__PipelineKeyBooleanValuePair
{ public:
/// Element name of type "http://france-life-imaging.fr/api":Pipeline.
    api__Pipeline*                       name                           1;	///< Required element.
/// Element value of type xs:boolean.
    bool                                 value                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":deleteExecution is a complexType.
class api__deleteExecution
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// Element deleteFiles of type xs:boolean.
    bool                                 deleteFiles                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":deleteExecutionResponse is a complexType.
class api__deleteExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getPipeline is a complexType.
class api__getPipeline
{ public:
/// Element pipelineId of type xs:string.
    std::string                          pipelineId                     1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getPipelineResponse is a complexType.
class api__getPipelineResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":authenticateHTTP is a complexType.
class api__authenticateHTTP
{ public:
/// Element userName of type xs:string.
    std::string                          userName                       1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":authenticateHTTPResponse is a complexType.
class api__authenticateHTTPResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":logout is a complexType.
class api__logout
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":logoutResponse is a complexType.
class api__logoutResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":updateExecution is a complexType.
class api__updateExecution
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// Vector of api__StringKeyValuePair* with length 1..unbounded
    std::vector<api__StringKeyValuePair*> keyValuePair                   1;
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":StringKeyValuePair is a complexType.
class api__StringKeyValuePair
{ public:
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_StringKeyValuePair    ;	///< Union _api__union_StringKeyValuePair selector: set to SOAP_UNION__api__union_StringKeyValuePair_<fieldname>
    union _api__union_StringKeyValuePair
    {
/// Element valueStr of type xs:string.
    std::string*                         valueStr                       1;	///< Required element.
/// Element valueInt of type xs:int.
    int                                  valueInt                       1;	///< Required element.
/// Element valueStatus of type "http://france-life-imaging.fr/api":ExecutionStatus.
    enum api__ExecutionStatus            valueStatus                    1;	///< Required element.
/// Element valueParamType of type "http://france-life-imaging.fr/api":ParameterTypedValue.
    api__ParameterTypedValue*            valueParamType                 1;	///< Required element.
    }                                    union_StringKeyValuePair      ;
//  END OF CHOICE
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":updateExecutionResponse is a complexType.
class api__updateExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getGlobalProperties is a complexType.
class api__getGlobalProperties
{ public:
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getGlobalPropertiesResponse is a complexType.
class api__getGlobalPropertiesResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":initExecution is a complexType.
class api__initExecution
{ public:
/// Element pipelineId of type xs:string.
    std::string                          pipelineId                     1;	///< Required element.
/// Vector of api__StringKeyParameterValuePair* with length 1..unbounded
    std::vector<api__StringKeyParameterValuePair*> inputValue                     1;
/// Element timeout of type xs:int.
    int*                                 timeout                        0;	///< Optional element.
/// Element executionName of type xs:string.
    std::string*                         executionName                  0;	///< Optional element.
/// Element studyId of type xs:string.
    std::string*                         studyId                        0;	///< Optional element.
/// Element playExecution of type xs:boolean.
    bool*                                playExecution                  0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":initExecutionResponse is a complexType.
class api__initExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getExecutionResults is a complexType.
class api__getExecutionResults
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getExecutionResultsResponse is a complexType.
class api__getExecutionResultsResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":killExecution is a complexType.
class api__killExecution
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getStdOut is a complexType.
class api__getStdOut
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getStdOutResponse is a complexType.
class api__getStdOutResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getStdErr is a complexType.
class api__getStdErr
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getStdErrResponse is a complexType.
class api__getStdErrResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":killExecutionResponse is a complexType.
class api__killExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getExecution is a complexType.
class api__getExecution
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":getExecutionResponse is a complexType.
class api__getExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":playExecution is a complexType.
class api__playExecution
{ public:
/// Element executionId of type xs:string.
    std::string                          executionId                    1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":playExecutionResponse is a complexType.
class api__playExecutionResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":listPipelines is a complexType.
class api__listPipelines
{ public:
/// Element studyIdentifier of type xs:string.
    std::string                          studyIdentifier                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":listPipelinesResponse is a complexType.
class api__listPipelinesResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":listExecutions is a complexType.
class api__listExecutions
{ public:
/// Element studyIdentifier of type xs:string.
    std::string                          studyIdentifier                1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":listExecutionsResponse is a complexType.
class api__listExecutionsResponse
{ public:
/// Element return of type "http://france-life-imaging.fr/api":Response.
    api__Response*                       return_                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set)
    struct soap                         *soap                          ;
};

/// "http://france-life-imaging.fr/api":Pipeline is a complexType with complexContent extension of "http://france-life-imaging.fr/api":Object.
class api__Pipeline : public api__Object
{ public:
/*  INHERITED FROM api__Object:
    END OF INHERITED */
/// Element identifier of type xs:string.
    std::string                          identifier                     1;	///< Required element.
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element description of type xs:string.
    std::string*                         description                    0;	///< Optional element.
/// Element version of type xs:string.
    std::string                          version                        1;	///< Required element.
/// Vector of api__PipelineParameter* with length 0..unbounded
    std::vector<api__PipelineParameter*> parameters                     0;
/// Vector of api__IntKeyStringValuePair* with length 0..unbounded
    std::vector<api__IntKeyStringValuePair*> errorCodesAndMessages          0;
/// Element canExecute of type xs:boolean.
    bool*                                canExecute                     0;	///< Optional element.
};

/// "http://france-life-imaging.fr/api":Execution is a complexType with complexContent extension of "http://france-life-imaging.fr/api":Object.
class api__Execution : public api__Object
{ public:
/*  INHERITED FROM api__Object:
    END OF INHERITED */
/// Element identifier of type xs:string.
    std::string                          identifier                     1;	///< Required element.
/// Element name of type xs:string.
    std::string                          name                           1;	///< Required element.
/// Element pipelineIdentifier of type xs:string.
    std::string                          pipelineIdentifier             1;	///< Required element.
/// Element timeout of type xs:int.
    int*                                 timeout                        0;	///< Optional element.
/// Element status of type "http://france-life-imaging.fr/api":ExecutionStatus.
    enum api__ExecutionStatus            status                         1;	///< Required element.
/// Vector of api__StringKeyParameterValuePair* with length 0..unbounded
    std::vector<api__StringKeyParameterValuePair*> inputValue                     0;
/// Vector of api__StringKeyParameterValuePair* with length 0..unbounded
    std::vector<api__StringKeyParameterValuePair*> returnedFile                   0;
/// Element studyIdentifier of type xs:string.
    std::string*                         studyIdentifier                0;	///< Optional element.
/// Element errorCode of type xs:int.
    int*                                 errorCode                      0;	///< Optional element.
/// Element startDate of type xs:long.
    LONG64*                              startDate                      0;	///< Optional element.
/// Element endDate of type xs:long.
    LONG64*                              endDate                        0;	///< Optional element.
};

/// "http://france-life-imaging.fr/api":GlobalProperties is a complexType with complexContent extension of "http://france-life-imaging.fr/api":Object.
class api__GlobalProperties : public api__Object
{ public:
/*  INHERITED FROM api__Object:
    END OF INHERITED */
/// Vector of api__IntKeyStringValuePair* with length 0..unbounded
    std::vector<api__IntKeyStringValuePair*> APIErrorCodesAndMessages       0;
/// Vector of std::string with length 1..unbounded
    std::vector<std::string            > supportedTransferProtocol      1;
/// Vector of enum api__Module with length 1..unbounded
    std::vector<enum api__Module       > supportedModule                1;
/// Element email of type xs:string.
    std::string*                         email                          0;	///< Optional element.
/// Element platformDescription of type xs:string.
    std::string*                         platformDescription            0;	///< Optional element.
/// Element minAuthorizedExecutionTimeout of type xs:int.
    int*                                 minAuthorizedExecutionTimeout  0;	///< Optional element.
/// Element maxAuthorizedExecutionTimeout of type xs:int.
    int*                                 maxAuthorizedExecutionTimeout  0;	///< Optional element.
/// Element defaultExecutionTimeout of type xs:int.
    int*                                 defaultExecutionTimeout        0;	///< Optional element.
/// Element isKillExecutionSupported of type xs:boolean.
    bool                                 isKillExecutionSupported       1;	///< Required element.
/// Element defaultStudy of type xs:string.
    std::string*                         defaultStudy                   0;	///< Optional element.
/// Element supportedAPIVersion of type xs:string.
    std::string                          supportedAPIVersion            1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://france-life-imaging.fr/api                                        *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://france-life-imaging.fr/api":authenticateHTTP of type "http://france-life-imaging.fr/api":authenticateHTTP.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":authenticateHTTPResponse of type "http://france-life-imaging.fr/api":authenticateHTTPResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":authenticateSession of type "http://france-life-imaging.fr/api":authenticateSession.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":authenticateSessionResponse of type "http://france-life-imaging.fr/api":authenticateSessionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":deleteExecution of type "http://france-life-imaging.fr/api":deleteExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":deleteExecutionResponse of type "http://france-life-imaging.fr/api":deleteExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getExecution of type "http://france-life-imaging.fr/api":getExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getExecutionResponse of type "http://france-life-imaging.fr/api":getExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getExecutionResults of type "http://france-life-imaging.fr/api":getExecutionResults.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getExecutionResultsResponse of type "http://france-life-imaging.fr/api":getExecutionResultsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getGlobalProperties of type "http://france-life-imaging.fr/api":getGlobalProperties.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getGlobalPropertiesResponse of type "http://france-life-imaging.fr/api":getGlobalPropertiesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getPipeline of type "http://france-life-imaging.fr/api":getPipeline.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getPipelineResponse of type "http://france-life-imaging.fr/api":getPipelineResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":initExecution of type "http://france-life-imaging.fr/api":initExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":initExecutionResponse of type "http://france-life-imaging.fr/api":initExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getStdOut of type "http://france-life-imaging.fr/api":getStdOut.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getStdOutResponse of type "http://france-life-imaging.fr/api":getStdOutResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getStdErr of type "http://france-life-imaging.fr/api":getStdErr.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":getStdErrResponse of type "http://france-life-imaging.fr/api":getStdErrResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":killExecution of type "http://france-life-imaging.fr/api":killExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":killExecutionResponse of type "http://france-life-imaging.fr/api":killExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":listExecutions of type "http://france-life-imaging.fr/api":listExecutions.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":listExecutionsResponse of type "http://france-life-imaging.fr/api":listExecutionsResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":listPipelines of type "http://france-life-imaging.fr/api":listPipelines.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":listPipelinesResponse of type "http://france-life-imaging.fr/api":listPipelinesResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":logout of type "http://france-life-imaging.fr/api":logout.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":logoutResponse of type "http://france-life-imaging.fr/api":logoutResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":playExecution of type "http://france-life-imaging.fr/api":playExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":playExecutionResponse of type "http://france-life-imaging.fr/api":playExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":updateExecution of type "http://france-life-imaging.fr/api":updateExecution.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://france-life-imaging.fr/api":updateExecutionResponse of type "http://france-life-imaging.fr/api":updateExecutionResponse.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://france-life-imaging.fr/api                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap api  service name:	CarminSoapBinding 
//gsoap api  service type:	Carmin 
//gsoap api  service port:	http://localhost/api 
//gsoap api  service namespace:	http://france-life-imaging.fr/api 
//gsoap api  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Carmin Definitions

@section Carmin_bindings Service Bindings

  - @ref CarminSoapBinding

@section Carmin_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CarminSoapBinding Binding "CarminSoapBinding"

@section CarminSoapBinding_operations Operations of Binding  "CarminSoapBinding"

  - @ref __api__authenticateSession

  - @ref __api__deleteExecution

  - @ref __api__getPipeline

  - @ref __api__authenticateHTTP

  - @ref __api__logout

  - @ref __api__updateExecution

  - @ref __api__getGlobalProperties

  - @ref __api__initExecution

  - @ref __api__getStdOut

  - @ref __api__getStdErr

  - @ref __api__getExecutionResults

  - @ref __api__killExecution

  - @ref __api__getExecution

  - @ref __api__playExecution

  - @ref __api__listPipelines

  - @ref __api__listExecutions

@section CarminSoapBinding_ports Endpoints of Binding  "CarminSoapBinding"

  - http://localhost/api

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CarminSoapBinding                                                        *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__authenticateSession                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__authenticateSession" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__authenticateSession(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__authenticateSession*           api__authenticateSession_,
    // response parameters:
    api__authenticateSessionResponse*   api__authenticateSessionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__authenticateSession(
    struct soap *soap,
    // request parameters:
    api__authenticateSession*           api__authenticateSession_,
    // response parameters:
    api__authenticateSessionResponse*   api__authenticateSessionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	authenticateSession document
//gsoap api  service method-encoding:	authenticateSession literal
//gsoap api  service method-action:	authenticateSession ""
int __api__authenticateSession(
    api__authenticateSession*           api__authenticateSession_,	///< Request parameter
    api__authenticateSessionResponse*   api__authenticateSessionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__deleteExecution                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__deleteExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__deleteExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__deleteExecution*               api__deleteExecution_,
    // response parameters:
    api__deleteExecutionResponse*       api__deleteExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__deleteExecution(
    struct soap *soap,
    // request parameters:
    api__deleteExecution*               api__deleteExecution_,
    // response parameters:
    api__deleteExecutionResponse*       api__deleteExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	deleteExecution document
//gsoap api  service method-encoding:	deleteExecution literal
//gsoap api  service method-action:	deleteExecution ""
int __api__deleteExecution(
    api__deleteExecution*               api__deleteExecution_,	///< Request parameter
    api__deleteExecutionResponse*       api__deleteExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getPipeline                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getPipeline" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getPipeline(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getPipeline*                   api__getPipeline_,
    // response parameters:
    api__getPipelineResponse*           api__getPipelineResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getPipeline(
    struct soap *soap,
    // request parameters:
    api__getPipeline*                   api__getPipeline_,
    // response parameters:
    api__getPipelineResponse*           api__getPipelineResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getPipeline document
//gsoap api  service method-encoding:	getPipeline literal
//gsoap api  service method-action:	getPipeline ""
int __api__getPipeline(
    api__getPipeline*                   api__getPipeline_,	///< Request parameter
    api__getPipelineResponse*           api__getPipelineResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__authenticateHTTP                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__authenticateHTTP" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__authenticateHTTP(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__authenticateHTTP*              api__authenticateHTTP_,
    // response parameters:
    api__authenticateHTTPResponse*      api__authenticateHTTPResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__authenticateHTTP(
    struct soap *soap,
    // request parameters:
    api__authenticateHTTP*              api__authenticateHTTP_,
    // response parameters:
    api__authenticateHTTPResponse*      api__authenticateHTTPResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	authenticateHTTP document
//gsoap api  service method-encoding:	authenticateHTTP literal
//gsoap api  service method-action:	authenticateHTTP ""
int __api__authenticateHTTP(
    api__authenticateHTTP*              api__authenticateHTTP_,	///< Request parameter
    api__authenticateHTTPResponse*      api__authenticateHTTPResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__logout                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__logout" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__logout(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__logout*                        api__logout_,
    // response parameters:
    api__logoutResponse*                api__logoutResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__logout(
    struct soap *soap,
    // request parameters:
    api__logout*                        api__logout_,
    // response parameters:
    api__logoutResponse*                api__logoutResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	logout document
//gsoap api  service method-encoding:	logout literal
//gsoap api  service method-action:	logout ""
int __api__logout(
    api__logout*                        api__logout_,	///< Request parameter
    api__logoutResponse*                api__logoutResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__updateExecution                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__updateExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__updateExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__updateExecution*               api__updateExecution_,
    // response parameters:
    api__updateExecutionResponse*       api__updateExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__updateExecution(
    struct soap *soap,
    // request parameters:
    api__updateExecution*               api__updateExecution_,
    // response parameters:
    api__updateExecutionResponse*       api__updateExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	updateExecution document
//gsoap api  service method-encoding:	updateExecution literal
//gsoap api  service method-action:	updateExecution ""
int __api__updateExecution(
    api__updateExecution*               api__updateExecution_,	///< Request parameter
    api__updateExecutionResponse*       api__updateExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getGlobalProperties                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getGlobalProperties" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getGlobalProperties(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getGlobalProperties*           api__getGlobalProperties_,
    // response parameters:
    api__getGlobalPropertiesResponse*   api__getGlobalPropertiesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getGlobalProperties(
    struct soap *soap,
    // request parameters:
    api__getGlobalProperties*           api__getGlobalProperties_,
    // response parameters:
    api__getGlobalPropertiesResponse*   api__getGlobalPropertiesResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getGlobalProperties document
//gsoap api  service method-encoding:	getGlobalProperties literal
//gsoap api  service method-action:	getGlobalProperties ""
int __api__getGlobalProperties(
    api__getGlobalProperties*           api__getGlobalProperties_,	///< Request parameter
    api__getGlobalPropertiesResponse*   api__getGlobalPropertiesResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__initExecution                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__initExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__initExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__initExecution*                 api__initExecution_,
    // response parameters:
    api__initExecutionResponse*         api__initExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__initExecution(
    struct soap *soap,
    // request parameters:
    api__initExecution*                 api__initExecution_,
    // response parameters:
    api__initExecutionResponse*         api__initExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	initExecution document
//gsoap api  service method-encoding:	initExecution literal
//gsoap api  service method-action:	initExecution ""
int __api__initExecution(
    api__initExecution*                 api__initExecution_,	///< Request parameter
    api__initExecutionResponse*         api__initExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getStdOut                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getStdOut" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getStdOut(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getStdOut*                     api__getStdOut_,
    // response parameters:
    api__getStdOutResponse*             api__getStdOutResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getStdOut(
    struct soap *soap,
    // request parameters:
    api__getStdOut*                     api__getStdOut_,
    // response parameters:
    api__getStdOutResponse*             api__getStdOutResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getStdOut document
//gsoap api  service method-encoding:	getStdOut literal
//gsoap api  service method-action:	getStdOut ""
int __api__getStdOut(
    api__getStdOut*                     api__getStdOut_,	///< Request parameter
    api__getStdOutResponse*             api__getStdOutResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getStdErr                                                         *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getStdErr" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getStdErr(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getStdErr*                     api__getStdErr_,
    // response parameters:
    api__getStdErrResponse*             api__getStdErrResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getStdErr(
    struct soap *soap,
    // request parameters:
    api__getStdErr*                     api__getStdErr_,
    // response parameters:
    api__getStdErrResponse*             api__getStdErrResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getStdErr document
//gsoap api  service method-encoding:	getStdErr literal
//gsoap api  service method-action:	getStdErr ""
int __api__getStdErr(
    api__getStdErr*                     api__getStdErr_,	///< Request parameter
    api__getStdErrResponse*             api__getStdErrResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getExecutionResults                                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getExecutionResults" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getExecutionResults(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getExecutionResults*           api__getExecutionResults_,
    // response parameters:
    api__getExecutionResultsResponse*   api__getExecutionResultsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getExecutionResults(
    struct soap *soap,
    // request parameters:
    api__getExecutionResults*           api__getExecutionResults_,
    // response parameters:
    api__getExecutionResultsResponse*   api__getExecutionResultsResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getExecutionResults document
//gsoap api  service method-encoding:	getExecutionResults literal
//gsoap api  service method-action:	getExecutionResults ""
int __api__getExecutionResults(
    api__getExecutionResults*           api__getExecutionResults_,	///< Request parameter
    api__getExecutionResultsResponse*   api__getExecutionResultsResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__killExecution                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__killExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__killExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__killExecution*                 api__killExecution_,
    // response parameters:
    api__killExecutionResponse*         api__killExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__killExecution(
    struct soap *soap,
    // request parameters:
    api__killExecution*                 api__killExecution_,
    // response parameters:
    api__killExecutionResponse*         api__killExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	killExecution document
//gsoap api  service method-encoding:	killExecution literal
//gsoap api  service method-action:	killExecution ""
int __api__killExecution(
    api__killExecution*                 api__killExecution_,	///< Request parameter
    api__killExecutionResponse*         api__killExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__getExecution                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__getExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__getExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__getExecution*                  api__getExecution_,
    // response parameters:
    api__getExecutionResponse*          api__getExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__getExecution(
    struct soap *soap,
    // request parameters:
    api__getExecution*                  api__getExecution_,
    // response parameters:
    api__getExecutionResponse*          api__getExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	getExecution document
//gsoap api  service method-encoding:	getExecution literal
//gsoap api  service method-action:	getExecution ""
int __api__getExecution(
    api__getExecution*                  api__getExecution_,	///< Request parameter
    api__getExecutionResponse*          api__getExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__playExecution                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__playExecution" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__playExecution(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__playExecution*                 api__playExecution_,
    // response parameters:
    api__playExecutionResponse*         api__playExecutionResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__playExecution(
    struct soap *soap,
    // request parameters:
    api__playExecution*                 api__playExecution_,
    // response parameters:
    api__playExecutionResponse*         api__playExecutionResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	playExecution document
//gsoap api  service method-encoding:	playExecution literal
//gsoap api  service method-action:	playExecution ""
int __api__playExecution(
    api__playExecution*                 api__playExecution_,	///< Request parameter
    api__playExecutionResponse*         api__playExecutionResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__listPipelines                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__listPipelines" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__listPipelines(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__listPipelines*                 api__listPipelines_,
    // response parameters:
    api__listPipelinesResponse*         api__listPipelinesResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__listPipelines(
    struct soap *soap,
    // request parameters:
    api__listPipelines*                 api__listPipelines_,
    // response parameters:
    api__listPipelinesResponse*         api__listPipelinesResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	listPipelines document
//gsoap api  service method-encoding:	listPipelines literal
//gsoap api  service method-action:	listPipelines ""
int __api__listPipelines(
    api__listPipelines*                 api__listPipelines_,	///< Request parameter
    api__listPipelinesResponse*         api__listPipelinesResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __api__listExecutions                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__api__listExecutions" of service binding "CarminSoapBinding"

/**

Operation details:


  - SOAP document/literal style messaging

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___api__listExecutions(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    api__listExecutions*                api__listExecutions_,
    // response parameters:
    api__listExecutionsResponse*        api__listExecutionsResponse_
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __api__listExecutions(
    struct soap *soap,
    // request parameters:
    api__listExecutions*                api__listExecutions_,
    // response parameters:
    api__listExecutionsResponse*        api__listExecutionsResponse_
  );
@endcode

C++ proxy class (defined in soapCarminSoapBindingProxy.h):
@code
  class CarminSoapBindingProxy;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use proxy classes;

C++ service class (defined in soapCarminSoapBindingService.h):
@code
  class CarminSoapBindingService;
@endcode
Important: use soapcpp2 option '-i' to generate greatly improved and easy-to-use service classes;

*/

//gsoap api  service method-style:	listExecutions document
//gsoap api  service method-encoding:	listExecutions literal
//gsoap api  service method-action:	listExecutions ""
int __api__listExecutions(
    api__listExecutions*                api__listExecutions_,	///< Request parameter
    api__listExecutionsResponse*        api__listExecutionsResponse_	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section api Top-level root elements of schema "http://france-life-imaging.fr/api"

  - <api:authenticateHTTP> (use wsdl2h option -g to auto-generate)

  - <api:authenticateHTTPResponse> (use wsdl2h option -g to auto-generate)

  - <api:authenticateSession> (use wsdl2h option -g to auto-generate)

  - <api:authenticateSessionResponse> (use wsdl2h option -g to auto-generate)

  - <api:deleteExecution> (use wsdl2h option -g to auto-generate)

  - <api:deleteExecutionResponse> (use wsdl2h option -g to auto-generate)

  - <api:getExecution> (use wsdl2h option -g to auto-generate)

  - <api:getExecutionResponse> (use wsdl2h option -g to auto-generate)

  - <api:getExecutionResults> (use wsdl2h option -g to auto-generate)

  - <api:getExecutionResultsResponse> (use wsdl2h option -g to auto-generate)

  - <api:getGlobalProperties> (use wsdl2h option -g to auto-generate)

  - <api:getGlobalPropertiesResponse> (use wsdl2h option -g to auto-generate)

  - <api:getPipeline> (use wsdl2h option -g to auto-generate)

  - <api:getPipelineResponse> (use wsdl2h option -g to auto-generate)

  - <api:initExecution> (use wsdl2h option -g to auto-generate)

  - <api:initExecutionResponse> (use wsdl2h option -g to auto-generate)

  - <api:getStdOut> (use wsdl2h option -g to auto-generate)

  - <api:getStdOutResponse> (use wsdl2h option -g to auto-generate)

  - <api:getStdErr> (use wsdl2h option -g to auto-generate)

  - <api:getStdErrResponse> (use wsdl2h option -g to auto-generate)

  - <api:killExecution> (use wsdl2h option -g to auto-generate)

  - <api:killExecutionResponse> (use wsdl2h option -g to auto-generate)

  - <api:listExecutions> (use wsdl2h option -g to auto-generate)

  - <api:listExecutionsResponse> (use wsdl2h option -g to auto-generate)

  - <api:listPipelines> (use wsdl2h option -g to auto-generate)

  - <api:listPipelinesResponse> (use wsdl2h option -g to auto-generate)

  - <api:logout> (use wsdl2h option -g to auto-generate)

  - <api:logoutResponse> (use wsdl2h option -g to auto-generate)

  - <api:playExecution> (use wsdl2h option -g to auto-generate)

  - <api:playExecutionResponse> (use wsdl2h option -g to auto-generate)

  - <api:updateExecution> (use wsdl2h option -g to auto-generate)

  - <api:updateExecutionResponse> (use wsdl2h option -g to auto-generate)

*/

/* End of api.h */
